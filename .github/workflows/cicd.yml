name: Rust CI/CD with tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      WORKING_DIR: rust_cli_binary 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Check
      run: cargo check
      working-directory: ${{ env.WORKING_DIR }}

    - name: Format
      run: cargo fmt
      working-directory: ${{ env.WORKING_DIR }}

    - name: Test
      run: cargo test
      working-directory: ${{ env.WORKING_DIR }}

    - name: Release
      run: cargo build --release
      working-directory: ${{ env.WORKING_DIR }}

    - name: Upload Binary Artifact
      uses: actions/upload-artifact@v4 
      with:
        name: CLI Binary
        path: ${{ env.WORKING_DIR }}/target/release/rust_cli_binary


# name: Rust CI/CD with tests

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     env:
#       WORKING_DIR: rust_cli_binary 

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Install Rust
#       uses: actions-rs/toolchain@v1
#       with:
#         toolchain: stable
#         override: true

#     - name: Check
#       run: cargo check
#       working-directory: ${{ env.WORKING_DIR }}

#     - name: Format
#       run: cargo fmt
#       working-directory: ${{ env.WORKING_DIR }}

#     - name: Test
#       run: cargo test
#       working-directory: ${{ env.WORKING_DIR }}

#     - name: Release
#       run: cargo build --release
#       working-directory: ${{ env.WORKING_DIR }}

#     - name: Upload Binary Artifact
#       uses: actions/upload-artifact@v4 
#       with:
#         name: CLI Binary
#         path: ${{ env.WORKING_DIR }}/target/release/rust_cli_binary 